{"ast":null,"code":"var _jsxFileName = \"D:\\\\Aldi\\\\Project\\\\API-Project\\\\L-Project\\\\frontend\\\\src\\\\features\\\\counter\\\\Counter.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { decrement, increment, incrementByAmount, incrementAsync, incrementIfOdd, selectCount } from './counterSlice';\nimport styles from './Counter.module.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport function Counter() {\n  _s();\n  const count = useSelector(selectCount);\n  const dispatch = useDispatch();\n  const [incrementAmount, setIncrementAmount] = useState('2');\n  const incrementValue = Number(incrementAmount) || 0;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.row,\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        className: styles.button,\n        \"aria-label\": \"Decrement value\",\n        onClick: () => dispatch(decrement()),\n        children: \"-\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        className: styles.value,\n        children: count\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: styles.button,\n        \"aria-label\": \"Increment value\",\n        onClick: () => dispatch(increment()),\n        children: \"+\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.row,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        className: styles.textbox,\n        \"aria-label\": \"Set increment amount\",\n        value: incrementAmount,\n        onChange: e => setIncrementAmount(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: styles.button,\n        onClick: () => dispatch(incrementByAmount(incrementValue)),\n        children: \"Add Amount\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: styles.asyncButton,\n        onClick: () => dispatch(incrementAsync(incrementValue)),\n        children: \"Add Async\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: styles.button,\n        onClick: () => dispatch(incrementIfOdd(incrementValue)),\n        children: \"Add If Odd\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 21,\n    columnNumber: 5\n  }, this);\n}\n_s(Counter, \"n8Hn+dfjiOyoP6EA1ZJKfEKeUOY=\", false, function () {\n  return [useSelector, useDispatch];\n});\n_c = Counter;\nvar _c;\n$RefreshReg$(_c, \"Counter\");","map":{"version":3,"names":["React","useState","useSelector","useDispatch","decrement","increment","incrementByAmount","incrementAsync","incrementIfOdd","selectCount","styles","Counter","count","dispatch","incrementAmount","setIncrementAmount","incrementValue","Number","row","button","value","textbox","e","target","asyncButton"],"sources":["D:/Aldi/Project/API-Project/L-Project/frontend/src/features/counter/Counter.js"],"sourcesContent":["import React, { useState } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport {\n  decrement,\n  increment,\n  incrementByAmount,\n  incrementAsync,\n  incrementIfOdd,\n  selectCount,\n} from './counterSlice';\nimport styles from './Counter.module.css';\n\nexport function Counter() {\n  const count = useSelector(selectCount);\n  const dispatch = useDispatch();\n  const [incrementAmount, setIncrementAmount] = useState('2');\n\n  const incrementValue = Number(incrementAmount) || 0;\n\n  return (\n    <div>\n      <div className={styles.row}>\n        <button\n          className={styles.button}\n          aria-label=\"Decrement value\"\n          onClick={() => dispatch(decrement())}\n        >\n          -\n        </button>\n        <span className={styles.value}>{count}</span>\n        <button\n          className={styles.button}\n          aria-label=\"Increment value\"\n          onClick={() => dispatch(increment())}\n        >\n          +\n        </button>\n      </div>\n      <div className={styles.row}>\n        <input\n          className={styles.textbox}\n          aria-label=\"Set increment amount\"\n          value={incrementAmount}\n          onChange={(e) => setIncrementAmount(e.target.value)}\n        />\n        <button\n          className={styles.button}\n          onClick={() => dispatch(incrementByAmount(incrementValue))}\n        >\n          Add Amount\n        </button>\n        <button\n          className={styles.asyncButton}\n          onClick={() => dispatch(incrementAsync(incrementValue))}\n        >\n          Add Async\n        </button>\n        <button\n          className={styles.button}\n          onClick={() => dispatch(incrementIfOdd(incrementValue))}\n        >\n          Add If Odd\n        </button>\n      </div>\n    </div>\n  );\n}\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,SAASC,WAAW,EAAEC,WAAW,QAAQ,aAAa;AACtD,SACEC,SAAS,EACTC,SAAS,EACTC,iBAAiB,EACjBC,cAAc,EACdC,cAAc,EACdC,WAAW,QACN,gBAAgB;AACvB,OAAOC,MAAM,MAAM,sBAAsB;AAAC;AAE1C,OAAO,SAASC,OAAO,GAAG;EAAA;EACxB,MAAMC,KAAK,GAAGV,WAAW,CAACO,WAAW,CAAC;EACtC,MAAMI,QAAQ,GAAGV,WAAW,EAAE;EAC9B,MAAM,CAACW,eAAe,EAAEC,kBAAkB,CAAC,GAAGd,QAAQ,CAAC,GAAG,CAAC;EAE3D,MAAMe,cAAc,GAAGC,MAAM,CAACH,eAAe,CAAC,IAAI,CAAC;EAEnD,oBACE;IAAA,wBACE;MAAK,SAAS,EAAEJ,MAAM,CAACQ,GAAI;MAAA,wBACzB;QACE,SAAS,EAAER,MAAM,CAACS,MAAO;QACzB,cAAW,iBAAiB;QAC5B,OAAO,EAAE,MAAMN,QAAQ,CAACT,SAAS,EAAE,CAAE;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QAG9B,eACT;QAAM,SAAS,EAAEM,MAAM,CAACU,KAAM;QAAA,UAAER;MAAK;QAAA;QAAA;QAAA;MAAA,QAAQ,eAC7C;QACE,SAAS,EAAEF,MAAM,CAACS,MAAO;QACzB,cAAW,iBAAiB;QAC5B,OAAO,EAAE,MAAMN,QAAQ,CAACR,SAAS,EAAE,CAAE;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QAG9B;IAAA;MAAA;MAAA;MAAA;IAAA,QACL,eACN;MAAK,SAAS,EAAEK,MAAM,CAACQ,GAAI;MAAA,wBACzB;QACE,SAAS,EAAER,MAAM,CAACW,OAAQ;QAC1B,cAAW,sBAAsB;QACjC,KAAK,EAAEP,eAAgB;QACvB,QAAQ,EAAGQ,CAAC,IAAKP,kBAAkB,CAACO,CAAC,CAACC,MAAM,CAACH,KAAK;MAAE;QAAA;QAAA;QAAA;MAAA,QACpD,eACF;QACE,SAAS,EAAEV,MAAM,CAACS,MAAO;QACzB,OAAO,EAAE,MAAMN,QAAQ,CAACP,iBAAiB,CAACU,cAAc,CAAC,CAAE;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QAGpD,eACT;QACE,SAAS,EAAEN,MAAM,CAACc,WAAY;QAC9B,OAAO,EAAE,MAAMX,QAAQ,CAACN,cAAc,CAACS,cAAc,CAAC,CAAE;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QAGjD,eACT;QACE,SAAS,EAAEN,MAAM,CAACS,MAAO;QACzB,OAAO,EAAE,MAAMN,QAAQ,CAACL,cAAc,CAACQ,cAAc,CAAC,CAAE;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QAGjD;IAAA;MAAA;MAAA;MAAA;IAAA,QACL;EAAA;IAAA;IAAA;IAAA;EAAA,QACF;AAEV;AAAC,GAtDeL,OAAO;EAAA,QACPT,WAAW,EACRC,WAAW;AAAA;AAAA,KAFdQ,OAAO;AAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}