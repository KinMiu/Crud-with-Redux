{"ast":null,"code":"import { createSlice, createAsyncThunk } from '@reduxjs/toolkit';\nimport axios from 'axios';\nconst initialState = {\n  user: null,\n  isError: false,\n  isSuccess: false,\n  isLoading: false,\n  message: ''\n};\nexport const userLogin = createAsyncThunk('user/userLogin', async (user, thunkAPI) => {\n  try {\n    const response = await axios.post('http://localhost:5000/login', {\n      email: user.email,\n      password: user.password\n    });\n    return response.data;\n  } catch (error) {\n    if (error.message) {\n      const message = error.response.data.msg;\n      return thunkAPI.rejectWithValue(message);\n    }\n  }\n});\nexport const getMe = createAsyncThunk('user/getMe', async (_, thunkAPI) => {\n  try {\n    const response = await axios.get('http://localhost:5000/me');\n    return response.data;\n  } catch (error) {\n    if (error.message) {\n      const message = error.response.data.msg;\n      return thunkAPI.rejectWithValue(message);\n    }\n  }\n});\nexport const logOut = createAsyncThunk('user/logout', async () => {\n  await axios.get('http://localhost:5000/me');\n});\nexport const authSlice = createSlice({\n  name: 'auth',\n  initialState,\n  reducers: {\n    reset: state => initialState\n  },\n  extraReducers: builder => {\n    builder.addCase(userLogin.pending, state => {\n      state.isLoading = true;\n    });\n    builder.addCase(userLogin.fulfilled, (state, action) => {\n      state.isLoading = false;\n      state.isSuccess = true;\n      state.user = action.payload;\n    });\n    builder.addCase(userLogin.rejected, (state, action) => {\n      state.isLoading = false;\n      state.isError = true;\n      state.message = action.payload;\n    });\n  }\n});\nexport const {\n  reset\n} = authSlice.actions;\nexport default authSlice.reducer;","map":{"version":3,"names":["createSlice","createAsyncThunk","axios","initialState","user","isError","isSuccess","isLoading","message","userLogin","thunkAPI","response","post","email","password","data","error","msg","rejectWithValue","getMe","_","get","logOut","authSlice","name","reducers","reset","state","extraReducers","builder","addCase","pending","fulfilled","action","payload","rejected","actions","reducer"],"sources":["D:/Aldi/Project/API-Project/L-Project/frontend/src/features/authSlice.js"],"sourcesContent":["import { createSlice, createAsyncThunk } from '@reduxjs/toolkit';\r\nimport axios from 'axios';\r\n\r\nconst initialState = {\r\n  user: null,\r\n  isError: false,\r\n  isSuccess: false,\r\n  isLoading: false,\r\n  message: '',\r\n};\r\n\r\nexport const userLogin = createAsyncThunk('user/userLogin', async (user, thunkAPI) => {\r\n  try {\r\n    const response = await axios.post('http://localhost:5000/login', {\r\n      email: user.email,\r\n      password: user.password,\r\n    });\r\n    return response.data;\r\n  } catch (error) {\r\n    if (error.message) {\r\n      const message = error.response.data.msg;\r\n      return thunkAPI.rejectWithValue(message);\r\n    }\r\n  }\r\n});\r\n\r\nexport const getMe = createAsyncThunk('user/getMe', async (_, thunkAPI) => {\r\n  try {\r\n    const response = await axios.get('http://localhost:5000/me');\r\n    return response.data;\r\n  } catch (error) {\r\n    if (error.message) {\r\n      const message = error.response.data.msg;\r\n      return thunkAPI.rejectWithValue(message);\r\n    }\r\n  }\r\n});\r\n\r\nexport const logOut = createAsyncThunk('user/logout', async () => {\r\n  await axios.get('http://localhost:5000/me');\r\n});\r\n\r\nexport const authSlice = createSlice({\r\n  name: 'auth',\r\n  initialState,\r\n  reducers: {\r\n    reset: (state) => initialState,\r\n  },\r\n  extraReducers: (builder) => {\r\n    builder.addCase(userLogin.pending, (state) => {\r\n      state.isLoading = true;\r\n    });\r\n    builder.addCase(userLogin.fulfilled, (state, action) => {\r\n      state.isLoading = false;\r\n      state.isSuccess = true;\r\n      state.user = action.payload;\r\n    });\r\n    builder.addCase(userLogin.rejected, (state, action) => {\r\n      state.isLoading = false;\r\n      state.isError = true;\r\n      state.message = action.payload;\r\n    });\r\n  },\r\n});\r\n\r\nexport const { reset } = authSlice.actions;\r\nexport default authSlice.reducer;\r\n"],"mappings":"AAAA,SAASA,WAAW,EAAEC,gBAAgB,QAAQ,kBAAkB;AAChE,OAAOC,KAAK,MAAM,OAAO;AAEzB,MAAMC,YAAY,GAAG;EACnBC,IAAI,EAAE,IAAI;EACVC,OAAO,EAAE,KAAK;EACdC,SAAS,EAAE,KAAK;EAChBC,SAAS,EAAE,KAAK;EAChBC,OAAO,EAAE;AACX,CAAC;AAED,OAAO,MAAMC,SAAS,GAAGR,gBAAgB,CAAC,gBAAgB,EAAE,OAAOG,IAAI,EAAEM,QAAQ,KAAK;EACpF,IAAI;IACF,MAAMC,QAAQ,GAAG,MAAMT,KAAK,CAACU,IAAI,CAAC,6BAA6B,EAAE;MAC/DC,KAAK,EAAET,IAAI,CAACS,KAAK;MACjBC,QAAQ,EAAEV,IAAI,CAACU;IACjB,CAAC,CAAC;IACF,OAAOH,QAAQ,CAACI,IAAI;EACtB,CAAC,CAAC,OAAOC,KAAK,EAAE;IACd,IAAIA,KAAK,CAACR,OAAO,EAAE;MACjB,MAAMA,OAAO,GAAGQ,KAAK,CAACL,QAAQ,CAACI,IAAI,CAACE,GAAG;MACvC,OAAOP,QAAQ,CAACQ,eAAe,CAACV,OAAO,CAAC;IAC1C;EACF;AACF,CAAC,CAAC;AAEF,OAAO,MAAMW,KAAK,GAAGlB,gBAAgB,CAAC,YAAY,EAAE,OAAOmB,CAAC,EAAEV,QAAQ,KAAK;EACzE,IAAI;IACF,MAAMC,QAAQ,GAAG,MAAMT,KAAK,CAACmB,GAAG,CAAC,0BAA0B,CAAC;IAC5D,OAAOV,QAAQ,CAACI,IAAI;EACtB,CAAC,CAAC,OAAOC,KAAK,EAAE;IACd,IAAIA,KAAK,CAACR,OAAO,EAAE;MACjB,MAAMA,OAAO,GAAGQ,KAAK,CAACL,QAAQ,CAACI,IAAI,CAACE,GAAG;MACvC,OAAOP,QAAQ,CAACQ,eAAe,CAACV,OAAO,CAAC;IAC1C;EACF;AACF,CAAC,CAAC;AAEF,OAAO,MAAMc,MAAM,GAAGrB,gBAAgB,CAAC,aAAa,EAAE,YAAY;EAChE,MAAMC,KAAK,CAACmB,GAAG,CAAC,0BAA0B,CAAC;AAC7C,CAAC,CAAC;AAEF,OAAO,MAAME,SAAS,GAAGvB,WAAW,CAAC;EACnCwB,IAAI,EAAE,MAAM;EACZrB,YAAY;EACZsB,QAAQ,EAAE;IACRC,KAAK,EAAGC,KAAK,IAAKxB;EACpB,CAAC;EACDyB,aAAa,EAAGC,OAAO,IAAK;IAC1BA,OAAO,CAACC,OAAO,CAACrB,SAAS,CAACsB,OAAO,EAAGJ,KAAK,IAAK;MAC5CA,KAAK,CAACpB,SAAS,GAAG,IAAI;IACxB,CAAC,CAAC;IACFsB,OAAO,CAACC,OAAO,CAACrB,SAAS,CAACuB,SAAS,EAAE,CAACL,KAAK,EAAEM,MAAM,KAAK;MACtDN,KAAK,CAACpB,SAAS,GAAG,KAAK;MACvBoB,KAAK,CAACrB,SAAS,GAAG,IAAI;MACtBqB,KAAK,CAACvB,IAAI,GAAG6B,MAAM,CAACC,OAAO;IAC7B,CAAC,CAAC;IACFL,OAAO,CAACC,OAAO,CAACrB,SAAS,CAAC0B,QAAQ,EAAE,CAACR,KAAK,EAAEM,MAAM,KAAK;MACrDN,KAAK,CAACpB,SAAS,GAAG,KAAK;MACvBoB,KAAK,CAACtB,OAAO,GAAG,IAAI;MACpBsB,KAAK,CAACnB,OAAO,GAAGyB,MAAM,CAACC,OAAO;IAChC,CAAC,CAAC;EACJ;AACF,CAAC,CAAC;AAEF,OAAO,MAAM;EAAER;AAAM,CAAC,GAAGH,SAAS,CAACa,OAAO;AAC1C,eAAeb,SAAS,CAACc,OAAO"},"metadata":{},"sourceType":"module","externalDependencies":[]}